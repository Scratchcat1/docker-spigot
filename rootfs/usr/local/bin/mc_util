#!/bin/bash
#
# get the PID for minecraft server pocess
#

MC_USER=minecraft       # User name running the minecraft server
MC_PROC=spigot.jar   # name of minecraft jar file
MC_DIR=/minecraft # Directory where the server should run

if [ -z "$MC_MAXMEM" ]; then
  MC_MAXMEM="1G"
fi

if [ -z  "$MC_MINMEM" ]; then
  MC_MINMEM=$MC_MAXMEM ;
fi

# Add $OTHER_JAVA_OPS to let the user determine what options they need
MC_JAVA_OPS="-Xmx$MC_MAXMEM -Xms$MC_MINMEM $OTHER_JAVA_OPS"   # java options for minecraft server


getPID() {
  local PID
  PID=$( ps -f -u $MC_USER | grep "$MC_PROC" | grep "/java " | grep -v "sh -c" |  grep -v grep | awk '{print $2}' )
  printf "%d\n" $PID
}

#
# return 1 if the minecraft server is running othervise 0
#

isRunning() {
  if [  $(getPID) -eq 0 ] ; then
	echo 0
  else
	echo 1
  fi
}

# execute command as minecraft user

execCMD() {
	# if running as root, switch to defined user

	if [ $(id -u) -eq 0 ]; then
		su -s /bin/sh -c "$1" $MC_USER $2
	else
		sh -c "$1" $2
	fi
}

#
# setProp
#
# setProp <filename> <property> <value>
#
#
setProp() {

  grep -q "^$2\s*\=" $1

  if [ $? -ne 0 ] ; then
	echo "$prop=$val" >> $1
  else
    sed -i "/^$2\s*=/ c $2=$3" $1
  fi

}

#
# send a command to the running minecraft server
sendCMD() {
  tmux send-keys -t mcserver -l stop
  tmux send-keys -t mcserver Enter
}

#
# create eula.txt if it does not exist
#

createEULA() {

  if [ ! -f $MC_DIR/eula.txt  ] ; then
       execCMD "echo '#EULA file created by minecraft script\neula=false' > $MC_DIR/eula.txt"
  fi

}

#
# EULA accepted (0) or not (1)
#

acceptEULA() {
  local OK=1
  grep eula $MC_DIR/eula.txt |  grep -q 'true' && OK=0
  echo "$OK"
}

# 
# check that all is ok the start server
#

checkOK() {

  # check that the directory exists

  if [ ! -d $MC_DIR ] ; then
	echo "$MC_DIR does not exist" ;
	exit 1
  fi

  # and there are a jar file in it

  if [ ! -f $MC_DIR/$MC_PROC ] ; then
	echo "the minecraftfile $MC_DIR/$MC_PROC does not exist."
	exit 1
  fi 

  # check to see that minecraft user can write in the

  execCMD "touch $MC_DIR/testfile 2> /dev/null"
  if [ ! -f $MC_DIR/testfile ] ; then
	echo "the user $MC_USER has not write access to directory $MC_DIR"
	exit 1
  else
    rm $MC_DIR/testfile
  fi

  # check if EULA accepted

  createEULA

  if [ $(acceptEULA) -eq 1 ] ; then
	echo "you must accept Mojangs EULA, either set eula=true in $MC_DIR/eula.txt"
	exit 1
  fi
	
}


#
# create spigot jar for requested version
#

buildjar() {
  # set right version of java for this minecraft version
  /usr/local/bin/set_mc_ver $1
  hash -r
  # build it if it not exists
  if [ ! -f $SPIGOT_HOME/spigot-$1.jar ]; then
    echo "Building spigot version ($1) jar file, be patient"
    if [ -d /build-mc ]; then
	rm -Rf /build-mc
    fi
    mkdir -p /build-mc
    wget https://hub.spigotmc.org/jenkins/job/BuildTools/lastSuccessfulBuild/artifact/target/BuildTools.jar -O /build-mc/BuildTools.jar
    HOME=/build-mc
    export HOME
    cd $HOME
    echo $("java -version")
    ls -lhaR ./
    "$JAVACMD -Xmx1024M -jar BuildTools.jar --rev $1"
    #cp /build-mc/Spigot/Spigot-Server/target/spigot-*.jar $SPIGOT_HOME/spigot-$1.jar
    cp /build-mc/spigot-*.jar $SPIGOT_HOME/spigot-$1.jar
    cd $SPIGOT_HOME/
    rm -Rf /build-mc
  fi
  execCMD "rm -f $SPIGOT_HOME/spigot.jar"
  execCMD "ln -s $SPIGOT_HOME/spigot-$1.jar $SPIGOT_HOME/spigot.jar"
}


#
# start the minecraft server
#

start() {
   echo -n "Starting minecraft server as user $MC_USER..."

   checkOK

   # be in right working directory when starting 
   cd $MC_DIR
   JAVACMD=$(which java)
   execCMD "$JAVACMD $MC_JAVA_OPS -jar $MC_DIR/$MC_PROC nogui"
}

stop() {
  local i

  echo -n "Stopping minecraft server..."

  sendCMD "stop"

  # wait for 10 seconds until killing it
  i=0

  while [ $i -lt 10  -a $(isRunning) -eq 1 ]
  do
    echo -n "."
    sleep 1
    i=`expr $i + 1`
  done

  if [ $(isRunning) -eq 1 ] ; then
     echo -n  "(need to kill it)..."
     kill  $(getPID)
     # give it time to die
     sleep 2
  fi

  if [ $(isRunning) -eq 1 ] ; then
     echo "Could not stop it"
     exit 1
  else
     echo "Stopped" 
  fi

}
seteula() {
    
    # make sure that we have an eula.txt file to modifie

    createEULA

    setProp $MC_DIR/eula.txt "eula" "true"

    echo "EULA accepted"

}